package cc.winterclient.client.module.ext.exploit;

import cc.winterclient.client.event.EventTarget;
import cc.winterclient.client.event.ext.update.EventPre;
import cc.winterclient.client.event.ext.scenarios.EventSendPacket;
import cc.winterclient.client.event.ext.update.EventUpdate;
import cc.winterclient.client.module.Category;
import cc.winterclient.client.module.Module;
import cc.winterclient.client.option.Option;
import cc.winterclient.client.option.ext.BoolOption;
import cc.winterclient.client.option.ext.DoubleOption;
import cc.winterclient.client.option.ext.EnumOption;
import cc.winterclient.client.util.ChatUtil;
import net.minecraft.client.entity.EntityOtherPlayerMP;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.*;
import net.minecraftforge.client.event.RenderGameOverlayEvent;
import org.lwjgl.input.Keyboard;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Fakelag extends Module {

    private List<String> modes = Arrays.asList("Blink", "Flow", "OnlyAir", "OnlyGround", "Lag");
    private EntityOtherPlayerMP entityPlayer;
    private Option<Boolean> bypass = new BoolOption("Bypass", true, this);
    private Option<String> mode = new EnumOption("Mode", "Flow", modes, this);
    private Option<Double> lagFactor = new DoubleOption("Lag Factor", 4D, 1D, 20D, this, true, v-> mode.getExact().equalsIgnoreCase("Lag"));

    private ArrayList<Packet> packets = new ArrayList<>();


    public Fakelag(){
        super("Fakelag", Category.EXPLOIT, Keyboard.KEY_NONE);
    }

    @Override
    public void onEnable(){
        super.onEnable();
        packets.clear();
        if(!mode.getExact().equals("Lag"))
            spawnPlayer();
    }

    private void spawnPlayer(){
        entityPlayer = new EntityOtherPlayerMP(mc.world, mc.player.getGameProfile());
        entityPlayer.copyLocationAndAnglesFrom(mc.player);
        entityPlayer.rotationYawHead = mc.player.rotationYawHead;
        entityPlayer.setHealth(36);
        mc.world.addEntityToWorld(65536,entityPlayer);
    }

    private void deSpawnPlayer(){
        mc.world.removeEntity(entityPlayer);
    }

    @EventTarget
    public void onPre(EventPre e){

        if(!mode.getExact().equals("Lag"))
            entityPlayer.rotationYaw -= 10;

    }

    @EventTarget
    public void onUpdate(EventUpdate e){
        if(mode.getExact().equals("Lag")) {
            if (mc.player.ticksExisted % lagFactor.getExact() == 0) {
                for(int i = 0; i < packets.size(); i++){
                    mc.player.connection.sendPacket(packets.get(i));
                    ChatUtil.sendMessage("Sending " + packets.get(i).getClass().getSimpleName() + " array length: " + packets.size());
                }

            }
        }
    }


    @EventTarget
    public void onSend(EventSendPacket e){

        if(mode.getExact().equals("Lag") && packets.contains(e.getPacket())){
            ChatUtil.sendMessage("Passing " + e.getPacket().getClass().getSimpleName());
            packets.remove(e.getPacket());
            return;
        }

        if(mode.getExact().equals("Lag")){
            packets.add(e.getPacket());
            e.setCancelled(true);
            return;
        }

        if(bypass.getExact()){
            if(e.getPacket() instanceof CPacketPlayer){
                packets.add(e.getPacket());
                e.setCancelled(true);
            }
        }else {
            if (!e.getPacket().getClass().getSimpleName().startsWith("S") && !(e.getPacket() instanceof CPacketKeepAlive)) {
        /*    if(bypass.getExact()){
                mc.player.connection.sendPacket(new CPacketPlayer.Position(entityPlayer.posX, entityPlayer.posY, entityPlayer.posZ, true));
            }*/
                packets.add(e.getPacket());
                e.setCancelled(true);
                ChatUtil.sendMessage("Cancelling " + e.getPacket().getClass().getSimpleName());
            }
        }

    }

    @Override
    public void onDisable(){
        super.onDisable();
        for(Packet packet : packets){
            mc.player.connection.sendPacket(packet);
        }
        packets.clear();

        if(!mode.getExact().equals("Lag"))
            deSpawnPlayer();

    }



}
